// <auto-generated />
using System;
using ManagementTravel.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace TravelManagement.Migrations
{
    [DbContext(typeof(ManagementTravelContext))]
    [Migration("20190809000632_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ManagementTravel.Models.Hotel", b =>
                {
                    b.Property<int>("IDHotel")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("addressHotel")
                        .IsRequired();

                    b.Property<bool>("availableHotel");

                    b.Property<string>("locationHotel")
                        .IsRequired();

                    b.Property<string>("nameHotel")
                        .IsRequired();

                    b.HasKey("IDHotel");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("ManagementTravel.Models.Person", b =>
                {
                    b.Property<int>("personID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("personDateBirth");

                    b.Property<string>("personEmail")
                        .IsRequired();

                    b.Property<string>("personEmergencyContactName")
                        .IsRequired();

                    b.Property<string>("personEmergencyContactPhone")
                        .IsRequired();

                    b.Property<string>("personGender")
                        .IsRequired();

                    b.Property<int>("personIdentification");

                    b.Property<string>("personName")
                        .IsRequired();

                    b.Property<string>("personPhone")
                        .IsRequired();

                    b.Property<string>("personTypeDocument")
                        .IsRequired();

                    b.HasKey("personID");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("ManagementTravel.Models.Reservation", b =>
                {
                    b.Property<int>("IDReservation")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ReservationPersonpersonID");

                    b.Property<int?>("ReservationRoomIDRoom");

                    b.Property<string>("descriptionReservation");

                    b.Property<string>("phonePersonReservation")
                        .IsRequired();

                    b.Property<int>("quantityPersonReservation");

                    b.Property<DateTime>("sinceReservation");

                    b.Property<DateTime>("untilReservation");

                    b.HasKey("IDReservation");

                    b.HasIndex("ReservationPersonpersonID");

                    b.HasIndex("ReservationRoomIDRoom");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("ManagementTravel.Models.Room", b =>
                {
                    b.Property<int>("IDRoom")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IDRoomHotel");

                    b.Property<bool>("availableRoom");

                    b.Property<int>("basePriceRoom");

                    b.Property<int?>("oRoomIDHotel");

                    b.Property<int>("quantityRoom");

                    b.Property<string>("roomName")
                        .IsRequired();

                    b.Property<int>("taxesPercentRooms");

                    b.Property<decimal>("totalPriceRoom");

                    b.HasKey("IDRoom");

                    b.HasIndex("oRoomIDHotel");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("ManagementTravel.Models.User", b =>
                {
                    b.Property<string>("userNameUser")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("UserPersonpersonID");

                    b.Property<string>("userNamePassword")
                        .IsRequired();

                    b.HasKey("userNameUser");

                    b.HasIndex("UserPersonpersonID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ManagementTravel.Models.Reservation", b =>
                {
                    b.HasOne("ManagementTravel.Models.Person", "ReservationPerson")
                        .WithMany("ReservationPerson")
                        .HasForeignKey("ReservationPersonpersonID");

                    b.HasOne("ManagementTravel.Models.Room", "ReservationRoom")
                        .WithMany("ReservationRoom")
                        .HasForeignKey("ReservationRoomIDRoom");
                });

            modelBuilder.Entity("ManagementTravel.Models.Room", b =>
                {
                    b.HasOne("ManagementTravel.Models.Hotel", "oRoom")
                        .WithMany("IDRoomHotel")
                        .HasForeignKey("oRoomIDHotel");
                });

            modelBuilder.Entity("ManagementTravel.Models.User", b =>
                {
                    b.HasOne("ManagementTravel.Models.Person", "UserPerson")
                        .WithMany("UserPerson")
                        .HasForeignKey("UserPersonpersonID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
